// 程式部分
0010_1000_0000_0000_0001_0000_0000_0001 // 0: LD R1, #1            ; R1 = 1
0011_1000_0000_0000_0001_0000_0001_0000 // 1: STR MEM[16], R1      ; STR R1, 16 (1)
0010_0000_0000_0001_0000_0000_0000_0000 // 2: LD R0, MEM[16]       ; R0 = 1
0100_1000_0000_0000_0001_0000_0000_0001 // 3: ADD R1, #1           ; R1 = R1 + 1 = 2
0010_1000_0000_0000_0010_0000_0000_0010 // 4: LD R2, #2            ; R2 = 2
0101_0000_0000_0000_0010_0000_0000_0001 // 5: MUL R1, R2           ; R1 = R1 * R2 = 4
1010_1000_0000_0000_0101_0000_0000_0000 // 6: OR R0, #5            ; R0 = R0 OR 5  = 5
0110_0000_0000_0000_0000_0000_0000_0010 // 7: CMP R2               ; R2 = -2
1000_1000_0000_0000_0010_0000_0000_0000 // 8: ROT R0, #2           ; 右旋轉 R0 兩位
1000_1000_1111_1111_1110_0000_0000_0000 // 9: ROT R0, #-2          ; 左旋轉 R0 兩位
1011_0000_0000_0000_0001_0000_0000_0010 // 10: AND R2, R1          ; R2 = -2 AND 0100
0111_1000_0000_0000_0001_0000_0000_0000 // 11: SHF R0, #1          ; 右移 R0 一位
0111_1000_1111_1111_1111_0000_0000_0000 // 12: SHF R0, #-1         ; 左移 R0 一位
0001_0010_0000_0000_0000_0000_0000_1111 // 13: BRA 15, EVEN        ; 如果 EVEN=1 則跳到 HALT
0100_1000_0000_0000_0001_0000_0000_0001 // 14: ADD R1, #1          ; 如果不是偶數，R1 加 1
1001_0000_0000_0000_0000_0000_0000_0000 // 15: HALT                ; 停止


